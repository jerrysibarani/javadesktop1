package JavaDesktop;

import java.awt.event.KeyEvent;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;

public class frmSalesTransaction extends javax.swing.JFrame {

    private DefaultTableModel dtSalesDet;
    private String SQL;

    public frmSalesTransaction() {
        initComponents();
        this.setPropertyTable();
        this.getTransactionID();
        this.getComputerName();
        this.setLocationRelativeTo(null); //to make form run to center screen
        this.cleanInput();
    }

    private void setPropertyTable() {
        dtSalesDet = new DefaultTableModel();
        dtSalesDet.addColumn("ITEM CODE");
        dtSalesDet.addColumn("ITEM NAME");
        dtSalesDet.addColumn("PRICE");
        dtSalesDet.addColumn("MEASURE");
        dtSalesDet.addColumn("QTY");
        dtSalesDet.addColumn("TOTAL");
        tblSalesDet.setModel(dtSalesDet);
    }

    private void getTransactionID() {
        //   DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");  
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyyMMddHHmmss");

        LocalDateTime now = LocalDateTime.now();
        //  System.out.println(dtf.format(now));
        txtInvoiceNo.setText("F" + dtf.format(now));
    }

    private void getComputerName() {
        String hostname = "Unknown";
        try {
            InetAddress addr;
            addr = InetAddress.getLocalHost();
            hostname = addr.getHostName();
            txtUser.setText(hostname);
        } catch (UnknownHostException ex) {
            System.out.println("Hostname can not be resolved");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalesDet = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMeasure = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnInput = new javax.swing.JButton();
        txtItemCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCustomerCode = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtInvoiceNo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1180, 630));
        setPreferredSize(new java.awt.Dimension(1170, 680));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblSalesDet.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        tblSalesDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSalesDet.setAutoscrolls(false);
        jScrollPane1.setViewportView(tblSalesDet);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 1140, 290));

        btnProcess.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        getContentPane().add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 540, 120, 70));

        txtUser.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 20, 290, 40));

        txtItemName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(txtItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 320, 40));

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 170, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Price (Rp)");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("User");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Item Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, -1));

        txtMeasure.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(txtMeasure, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 190, 90, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Measure");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, -1, -1));

        btnInput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnInput.setText("Input");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });
        getContentPane().add(btnInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 190, 110, 40));

        txtItemCode.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtItemCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtItemCodeFocusLost(evt);
            }
        });
        txtItemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemCodeKeyPressed(evt);
            }
        });
        getContentPane().add(txtItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 200, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Item Code");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Customer Code");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 20));

        txtCustomerCode.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(txtCustomerCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 260, 40));

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtyKeyPressed(evt);
            }
        });
        getContentPane().add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 190, 90, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Qty");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 160, -1, -1));

        txtInvoiceNo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        getContentPane().add(txtInvoiceNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 320, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Invoice No");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtItemCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemCodeFocusLost
        this.viewFindRecord();
    }//GEN-LAST:event_txtItemCodeFocusLost

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        this.saveToCart();
    }//GEN-LAST:event_btnInputActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed

        if (txtCustomerCode.getText().length() > 0) {
            this.saveToOrder();
            this.getTransactionID();
            this.cleanInput();
        } else {
            JOptionPane.showMessageDialog(null, "Please Fill Customer Code!", "Message", JOptionPane.INFORMATION_MESSAGE);
            txtCustomerCode.requestFocus();
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void txtItemCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemCodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtQty.requestFocus();
        }
    }//GEN-LAST:event_txtItemCodeKeyPressed

    private void txtQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnInput.doClick();
            txtItemCode.requestFocus();
        }
    }//GEN-LAST:event_txtQtyKeyPressed

    private void cleanInput() {
        txtItemCode.setText("");
        txtItemName.setText("");
        txtPrice.setText("");
        txtMeasure.setText("");
        txtQty.setText("");

        txtItemName.setEnabled(false);
        txtPrice.setEnabled(false);
        txtMeasure.setEnabled(false);
        txtItemCode.requestFocus();
    }

    private void saveToOrder() {
        try {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();

            Connection conn = DbConnection.getConnection();
            PreparedStatement pst = conn.prepareStatement("insert into orders"
                    + " (invoiceno, transaction_date, issued_by, customer_code) values(?,?,?,?)");
            pst.setString(1, txtInvoiceNo.getText());
            pst.setString(2, dtf.format(now));
            pst.setString(3, txtUser.getText());
            pst.setString(4, txtCustomerCode.getText());
            pst.executeUpdate();
            pst.close();
            this.moveCartToOrderDetail();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void saveToCart() {
        try {
            int total = Integer.parseInt(txtPrice.getText()) * Integer.parseInt(txtQty.getText());

            Connection conn = DbConnection.getConnection();
            PreparedStatement pst = conn.prepareStatement("insert into cart"
                    + "(invoiceno, itemcode, itemname, price, measure, qty, total) values(?,?,?,?,?,?,?)");
            pst.setString(1, txtInvoiceNo.getText());
            pst.setString(2, txtItemCode.getText());
            pst.setString(3, txtItemName.getText());
            pst.setString(4, txtPrice.getText());
            pst.setString(5, txtMeasure.getText());
            pst.setString(6, txtQty.getText());
            pst.setString(7, String.valueOf(total));
            pst.executeUpdate();
            pst.close();
            this.showCartToForm();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public void showCartToForm() {
        this.setPropertyTable();

        Connection conn = DbConnection.getConnection();
        try {
            java.sql.Statement stmt = conn.createStatement();
            SQL = "select * from cart where invoiceno='" + txtInvoiceNo.getText() + "'";
            java.sql.ResultSet rs = stmt.executeQuery(SQL);
            while (rs.next()) {
                dtSalesDet.addRow(new Object[]{
                    rs.getString("itemcode"),
                    rs.getString("itemname"),
                    rs.getString("price"),
                    rs.getString("measure"),
                    rs.getString("qty"),
                    rs.getString("total")
                });
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void moveCartToOrderDetail() {
        this.setPropertyTable();
        Connection conn = DbConnection.getConnection();
        try {
            java.sql.Statement stmt = conn.createStatement();
            SQL = "select * from cart where invoiceno='" + txtInvoiceNo.getText() + "'";
            java.sql.ResultSet res = stmt.executeQuery(SQL);
            while (res.next()) {
                try {
                    PreparedStatement pst = conn.prepareStatement("insert into orderdetail"
                            + "(invoiceno, itemcode, itemname, price, measure, qty, total) values(?,?,?,?,?,?,?)");
                    pst.setString(1, res.getString("invoiceno"));
                    pst.setString(2, res.getString("itemcode"));
                    pst.setString(3, res.getString("itemname"));
                    pst.setString(4, res.getString("price"));
                    pst.setString(5, res.getString("measure"));
                    pst.setString(6, res.getString("qty"));
                    pst.setString(7, res.getString("total"));
                    pst.executeUpdate();
                    pst.close();
                    this.clearCart(res.getString("invoiceno"));
                } catch (SQLException e1) {
                    System.out.println(e1.getMessage());
                }
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void clearCart(String invoiceNo) {
        try {
            Connection conn = DbConnection.getConnection();
            PreparedStatement pst = conn.prepareStatement("delete from cart "
                    + " where invoiceno=?");
            pst.setString(1, invoiceNo);
            pst.executeUpdate();
            pst.close();
        } catch (SQLException e1) {
            System.out.println("Clear Cart Error: " + e1.getMessage());
        }
    }

    public void viewFindRecord() {
        Connection conn = DbConnection.getConnection();
        try {
            java.sql.Statement stmt = conn.createStatement();
            SQL = "select * from item where itemcode = '" + txtItemCode.getText() + "'";
            java.sql.ResultSet rs = stmt.executeQuery(SQL);
            while (rs.next()) {
                txtItemCode.setText(rs.getString("itemcode"));
                txtItemName.setText(rs.getString("itemname"));
                txtPrice.setText(rs.getString("price"));
                txtMeasure.setText(rs.getString("measure"));
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSalesTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSalesTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSalesTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSalesTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSalesTransaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSalesDet;
    private javax.swing.JTextField txtCustomerCode;
    private javax.swing.JTextField txtInvoiceNo;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtMeasure;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
